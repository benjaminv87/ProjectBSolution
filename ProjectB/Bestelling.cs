//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjectB
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Bestelling
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Bestelling()
        {
            this.BestellingProduct = new HashSet<BestellingProduct>();
        }
    
        public int BestellingID { get; set; }
        public Nullable<System.DateTime> DatumOpgemaakt { get; set; }
        public Nullable<int> PersoneelslidID { get; set; }
        public Nullable<int> LeverancierID { get; set; }
        public Nullable<int> KlantID { get; set; }
    
        public virtual Klant Klant { get; set; }
        public virtual Leverancier Leverancier { get; set; }
        public virtual Personeelslid Personeelslid { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<BestellingProduct> BestellingProduct { get; set; }

        public int aantalProductenInBestelling
        {
            get
            {
                int aantal=0;
                foreach (var item in BestellingProduct)
                {
                    aantal +=(int) item.Aantal;
                }
                return aantal;
            }
        }

        public double totaalZonderBTW
        {
            get
            {
                double totaal = 0;
                foreach (var item in BestellingProduct)
                {
                    if (Leverancier != null)
                    {
                        totaal +=(double)(item.Aantal * item.Product.Inkoopprijs);
                    }
                    else
                    {
                        totaal += (double)(item.Aantal * item.Product.Verkoopprijs);
                    }
                }

                return totaal;
            }
        }

        public double bedragBTWIncl
        {
            get
            {
                double totaal = 0;
                foreach (var item in BestellingProduct)
                {
                    if (Leverancier != null)
                    {
                        totaal += (double)(item.Aantal * item.Product.totaalInclBtw);

                    }
                    else
                    {
                        totaal += (double)(item.Aantal * item.Product.totaalVerkoopInclBtw);
                    }
                }
                return totaal;
            }
        }
    }
}
